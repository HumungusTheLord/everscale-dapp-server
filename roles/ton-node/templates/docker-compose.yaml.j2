services:
  node:
    build:
      context: ./build
    container_name: rnode
    hostname: rnode
    restart: unless-stopped
    environment:
      ADNL_PORT: {{ node_adnl_port }}
      VALIDATOR_NAME: {{ node_validator_name }}
      NETWORK_TYPE: {{ node_network_type }}
      CONFIGS_PATH: {{ node_configs_path }}
      STATSD_DOMAIN: "{{ node_statsd_domain }}"
      STATSD_PORT: {{ node_statsd_port }}
      STAKE: {{ node_stake }}
      MSIG_ENABLE: "{{ node_msig_enable }}"
      SDK_URL: {{ node_sdk_url }}
      SDK_ENDPOINT_URL_LIST: {{ node_sdk_endpoint_url_list }}
      TON_NODE_EXTRA_ARGS: {{ node_extra_args }}
      TON_NODE_ENABLE_KAFKA: {{ node_enable_kafka }}
      RUST_NET_ENABLE: "{{ node_rust_net_enable}}"
      ELECTOR_TYPE: {{ node_elector_type }}
      DEPOOL_ENABLE: "{{ node_depool_enable }}"
      # SSH_AUTH_SOCK: /ssh-agent
    ports:
      - "{{ node_adnl_port }}:{{ node_adnl_port }}/udp"
      - "{{ node_console_port }}:{{ node_console_port }}"
    networks:
      - {{ node_net }}
    volumes:
      - ./configs/:/ton-node/configs/
      - ./scripts/:/ton-node/scripts/
      - ./logs/:/ton-node/logs/
      - DB:/ton-node/node_db/
      - /tmp/metrics/:/tmp/metrics/
      #- ${SSH_AUTH_SOCK}:/ssh-agent
    entrypoint: /ton-node/scripts/entrypoint.sh
    command: ["{{ node_cmd_1 }}", "{{ node_cmd_2 }}"]
    mem_limit: {{ node_mem_limit }}
    logging:
      driver: json-file
      options:
        max-size: "1000m"
        max-file: "100"
    cap_add:
      - SYS_PTRACE
    extra_hosts:
      - "parser.service:127.0.0.1"
networks:
  {{ node_net }}:
    external: true
volumes:
  DB:
