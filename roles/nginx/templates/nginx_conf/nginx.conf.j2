{% set NGX_MODULES_LOADED_LIST =  ngx_modules_loaded.split(',') %}

{% for item in NGX_MODULES_LOADED_LIST %}
load_module /usr/lib/nginx/modules/{{ item }}_module.so;
{% endfor %}

user  nginx;
worker_processes  auto;
worker_rlimit_nofile 65535;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  10240;
    use epoll;
    multi_accept on;
}

http {
{% if 'ngx_http_vhost_traffic_status' in NGX_MODULES_LOADED_LIST %}
    vhost_traffic_status_zone;
{% endif %}
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
	
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main	buffer=256k flush=5s;
    error_log /var/log/nginx/error.log warn;
    sendfile        on;
    proxy_ignore_client_abort on;
    proxy_connect_timeout 190;
    proxy_next_upstream_timeout 0;
    proxy_read_timeout 360s;
    proxy_send_timeout 360s;
    tcp_nodelay on;
    tcp_nopush on;
    open_file_cache max=200000 inactive=200s;
    keepalive_requests 100;
    keepalive_timeout  65;
    reset_timedout_connection on;
	server_tokens off;
	client_body_buffer_size     32m;
	client_max_body_size        192m;
    server {
{% if ngx_ipv6_enabled is sameas true or ngx_ipv6_enabled == "true" %}
        listen [::]:443 ssl default_server reuseport;
{% endif %}
        http2 on;
        ssl_reject_handshake on;
        include ssl_params;
    }
    include /etc/nginx/conf.d/*.conf;
}

